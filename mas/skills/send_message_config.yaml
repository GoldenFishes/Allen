# Date: 2025/04/15
# 该文件用于描述技能的使用方法，以及技能包含的提示词。

# 技能的简要作用描述，Agent所有可选技能与工具的简要描述会被组装在available_skills_and_tools中
use_guide:
  skill_name: "send_message"
  description:
    "
    该技能用于主动发起与其他Agent之间的通信。
    发起方使用send_message技能向接收方发送消息，接收方会在自己的step列表中追加一个用于回应step。
    如果是单向消息，则接收方追加process_message；如果需要回复，则接收方追加一个指向发送者的send_message。
    send_message步骤的初始构建需要包含发送对象(可以是多个对象)，是否需要回复等意图指示。
    
    因此在MAS中Agent间通讯的类型有两种实现方式：
    - 如果是一个单向消息，则通过Send Message和Process Message可以完成；
    - 如果是长期多轮对话，则通过一系列的Send Message和最后一个Process Message实现。
    "

# 技能实际调用的提示词
use_prompt:
  skill_name: "send_message"
  skill_prompt: | # 需要注意，提示词不需要LLM来判断send message是否是任务阶段相关的，LLM规划的send message一般默认是任务阶段相关。特殊情况下人类操作端才会生成与任务阶段无关的send message
    **你现在正在执行send_message技能，你正在主动发起与其他Agent之间的通信，或正在回复其他Agent的消息。**
    首先会判断当前Agent已有的信息是否满足发送消息的条件，即要发送的正确消息内容，当前Agent是否已知。
    - 如果存在未获取的信息，不能支撑当前Agent发送消息内容，则"获取更多信息"。
    - 如果当前Agent已有的信息满足发送消息的条件，则"直接消息发送"。
    
    一."直接消息发送"时，你需要按照以下步骤进行：
    (1).首先你需要根据步骤信息确认通讯对象（可以是多个对象），以及自行判断本次通讯是否需要回复（或等待回复）：
      一些告知性质的交流通常不需要回复，请勿滥用需要回复功能。
      - 如果需要回复：
        need_reply字段设置为True，每个接收方的step中会追加一个指向你Agent ID的send_message步骤，用于向你回复信息。
        如果你希望建立一个长期的多轮对话，你可以在消息内容中提示对方Agent在构造回应消息体时也将消息类型设为需要回复。
        
        在需要回复的情况下，你需要判断是否等待该回复：
        除了紧急重要需要立马实时解决的问题外，普通情况你不需要等待回复。
        - 如果等待回复：
          将waiting字段设置为True，此时你将暂停执行后续步骤，直到接收方的消息到达。
          如果你规划的步骤中有依赖于该回复的步骤，你需要将该步骤的waiting字段设置为True，防止在获取消息回复前就执行了依赖该消息的步骤。
        - 如果不等待回复：
          将waiting字段设置为False，则说明你不需要等待该回复，你可以继续执行后续步骤。
          你的后续步骤并不依赖你这次需要回复的消息。
        
      - 如果不需要回复：
        need_reply字段设置为False，每个接收方的step中会追加一个process_message步骤，用于处理消息。
    
    (2).然后，你需要根据历史步骤信息完善精确你要发送的消息内容，已执行的历史step信息在**history_step**章节中给出（未执行的step也在**history_step**中）。
    
    (3).你的消息发送内容需要包含：
      - 简短的自我介绍
        用于称述你的Agent角色身份和职责（如果和本次通讯有因果关系的话，简要阐述你过去做了什么事情）
      - 发送消息的意图
        说明你为什么要发送这条消息，或者你希望对方Agent做什么事情
      - 其他详细附加内容
        对本次消息意图的详细补充，或具体的消息内容。
    
    (4).最后，如果一切顺利，你将按照 return_format 的返回格式信息，将本次建立通讯的消息内容按照 return_format 指导的形式给出。
    通过 return_format 中的方式建立通讯消息体。
    
    *如果在此过程中你发现你缺少关键信息/已有信息不完整，不足以支持你的消息内容，你应当"获取更多信息"。*
    
    二."获取更多信息"时，你需要按照以下步骤进行：
    (1).首先确认你需要获取那些信息，哪些信息是你当前Agent已知的，哪些是未知的。
    
    (2).然后你会给自己追加一个Decision步骤，意图是获取你上述缺少的信息。该步骤会决策通过那些技能或工具去完成步骤目标（你填入的获取对应信息的意图）
      你需要明确使用Decision步骤（帮你规划如何去获取这些信息）的步骤属性：
        - step_intention： 步骤意图
        - text_content： 详细目标描述（写明你缺少那些信息，需要获取到何种程度）
    
    三.当你发现你缺少关键信息/已有信息不完整，不足以支持你的消息内容时：
    如果你发现（通过**history_step**章节中或其他方式）你已经通过了一个合理的Decision步骤尝试获取信息，但仍然没有获取到有效信息时。
    你可以如实回答"你不知道"于消息内容中。没必要反复执行Decision获取更多信息。

  return_format: |
    一.如果"直接消息发送"：
    - 输出格式用字典表示，字段中包含以下字段：
      receiver (List[str]): 接收者的Agent ID列表，表示你要发送消息的对象，你应当填入**接收对象的实际ID**(禁止使用XXX_ID等占位符)。
      message (str): 发送的实际消息内容
      stage_relative (str): 表示是否与任务阶段相关，是则填对应阶段Stage ID，否则为"no_relative"的字符串
      need_reply (bool): 表示是否需要回复，如果需要回复则为True，否则为False
      waiting (bool): 表示是否需要等待接收方的回复，如果需要等待则为True，否则为False。
        该字段用于防止你收到获取重要信息回复前，就执行了依赖该信息的后续步骤。
        在你需要获取到回复/答案才能完成后续步骤的情况下，你需要将该字段设置为True。
        此时你将暂停执行后续步骤，直到接收方的消息到达。
        
    - **请将你的消息构造结果用<send_message>和</send_message>标记，不要将其放在代码块中，否则将无法被系统识别。**返回示例：
    <send_message>
    {
      "receiver": [ "<agent_id>", "<agent_id>", ... ],  # 实际的接收者Agent ID列表
      "message": "<message_content>",
      "stage_relative": "<stage_id或None>",  # 表示是否与任务阶段相关，是则填对应阶段Stage ID，否则为no_relative的字符串
      "need_reply": <bool>,  # 需要回复则为True，否则为False
      "waiting": <bool>,  # 等待回复则为True，否则为False
    }
    </send_message>
    
    二.如果"获取更多信息"：
    - 输出格式用字典表示，字段中包含以下字段：
      step_intention (str): 步骤意图（获取你上述缺少的信息）
      text_content (str): 详细目标描述（写明你缺少那些信息，需要获取到何种程度）
    
    - **请将你的获取信息的步骤构造结果用<get_more_info>和</get_more_info>标记，不要将其放在代码块中，否则将无法被系统识别。**返回示例：
    <get_more_info>
    {
        "step_intention": "获取系统中XXX文档的XXX内容",
        "text_content": "我需要获取系统中关于XXX文档的XXX内容，需要精确到具体的XXX信息，以便我可以完成后续的消息发送。",
    }
    </get_more_info>